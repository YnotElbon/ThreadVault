#!/usr/bin/env bash
set -euo pipefail

# Simple helper to ask a model (Claude or OpenAI) from the terminal
# Usage:
#   ./system/bin/ask "you guys still talking?"
#   echo "question" | ./system/bin/ask
# Env:
#   ANTHROPIC_API_KEY (preferred) and/or OPENAI_API_KEY
#   ASK_PROVIDER=anthropic|openai  (auto if unset)
#   ANTHROPIC_MODEL=claude-3-5-sonnet-20240620 (default)
#   OPENAI_MODEL=gpt-4o-mini (default)

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"/../.. && pwd)"
cd "$ROOT_DIR"

question=${*:-}
if [ -z "$question" ]; then
  # read from stdin
  if [ -t 0 ]; then
    echo "Provide a prompt as args or via stdin" >&2
    exit 1
  else
    question=$(cat)
  fi
fi

provider=${ASK_PROVIDER:-}
anthropic_key=${ANTHROPIC_API_KEY:-}
openai_key=${OPENAI_API_KEY:-}

if [ -z "$provider" ]; then
  if [ -n "$anthropic_key" ]; then
    provider="anthropic"
  elif [ -n "$openai_key" ]; then
    provider="openai"
  else
    echo "No provider configured. Set ANTHROPIC_API_KEY or OPENAI_API_KEY." >&2
    exit 1
  fi
fi

answer=""
ts="$(date '+%Y-%m-%d %H:%M:%S')"

if [ "$provider" = "anthropic" ]; then
  model="${ANTHROPIC_MODEL:-claude-3-5-sonnet-20240620}"
  if [ -z "$anthropic_key" ]; then
    echo "ANTHROPIC_API_KEY not set" >&2
    exit 1
  fi
  payload=$(python3 - <<PY
import json,sys,os
print(json.dumps({
  "model": os.environ.get("ANTHROPIC_MODEL","claude-3-5-sonnet-20240620"),
  "max_tokens": 800,
  "messages": [{"role":"user","content": os.environ.get("QUESTION","") }]
}))
PY
)
  export QUESTION="$question"
  resp=$(curl -sS https://api.anthropic.com/v1/messages \
    -H "x-api-key: $anthropic_key" \
    -H "anthropic-version: 2023-06-01" \
    -H "content-type: application/json" \
    -d "$payload")
  answer=$(python3 - <<'PY'
import sys,json
try:
  j=json.load(sys.stdin)
  out=''.join([b.get('text','') for b in j.get('content',[]) if b.get('type')=='text'])
  print(out)
except Exception as e:
  print("")
PY
<<<"$resp")
elif [ "$provider" = "openai" ]; then
  model="${OPENAI_MODEL:-gpt-4o-mini}"
  if [ -z "$openai_key" ]; then
    echo "OPENAI_API_KEY not set" >&2
    exit 1
  fi
  payload=$(python3 - <<PY
import json,sys,os
print(json.dumps({
  "model": os.environ.get("OPENAI_MODEL","gpt-4o-mini"),
  "messages": [{"role":"user","content": os.environ.get("QUESTION","") }]
}))
PY
)
  export QUESTION="$question"
  resp=$(curl -sS https://api.openai.com/v1/chat/completions \
    -H "authorization: Bearer $openai_key" \
    -H "content-type: application/json" \
    -d "$payload")
  answer=$(python3 - <<'PY'
import sys,json
try:
  j=json.load(sys.stdin)
  print(j['choices'][0]['message']['content'])
except Exception:
  print("")
PY
<<<"$resp")
else
  echo "Unknown ASK_PROVIDER: $provider" >&2
  exit 1
fi

# Print to stdout
echo "$answer"

# Append Q/A to today's episodic memory (best-effort)
today="$(date '+%Y-%m-%d')"
epi="memory/episodic/${today}.md"
mkdir -p "$(dirname "$epi")"
if [ ! -f "$epi" ]; then
  {
    echo "# Episodic Memory - $today"
    echo
  } >> "$epi"
fi
{
  echo "### External Ask - $ts"
  echo "**Provider**: $provider"
  echo "**Question**: $question"
  echo
  echo "**Answer**:"
  echo "$answer" | sed 's/^/> /'
  echo
  echo "---"
  echo
} >> "$epi"

exit 0

